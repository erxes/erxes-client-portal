name: Client Portal CI

on:
  push:
    branches:
      # - 'develop'
      - '**'
    paths:
      - '**'
      - '!**.md'
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.18.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.18.x

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: |
        yarn install --production

    - name: Build
      run: |
        yarn build

    - name: Build docker image
      env:
        BASE_IMAGE: erxes/erxes:base-1.18-alpine
      run: |
        TAG_NAME="$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
        IMAGE_NAME="${GITHUB_REPOSITORY}:$TAG_NAME"
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build --build-arg BASE_IMAGE=$BASE_IMAGE -t $IMAGE_NAME .
        docker push $IMAGE_NAME

      # echo ${{ secrets.GITHUB_TOKEN }} | docker login https://docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin
      # IMAGE_NAME="docker.pkg.github.com/${GITHUB_REPOSITORY}/erxes-client-portal:$TAG_NAME"